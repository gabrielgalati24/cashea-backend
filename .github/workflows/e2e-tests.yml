name: Run E2E Tests with TestContainers

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        env:
          RABBITMQ_DEFAULT_USER: guest
          RABBITMQ_DEFAULT_PASS: guest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        version: 8
        run_install: false

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '24'
        cache: 'pnpm'

    - name: Install dependencies
      run: pnpm install

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Create test environment file
      run: |
        echo "NODE_ENV=test" > .env.test
        echo "PORT=3000" >> .env.test
        echo "API_GATEWAY_PORT=3000" >> .env.test
        echo "API_PREFIX=api" >> .env.test
        echo "API_VERSION=v1" >> .env.test
        echo "SWAGGER_PATH=docs" >> .env.test
        echo "RATE_LIMIT_TTL=60" >> .env.test
        echo "RATE_LIMIT_MAX=100" >> .env.test
        echo "JWT_SECRET=test123" >> .env.test
        echo "JWT_EXPIRATION=1d" >> .env.test
        echo "JWT_REFRESH_SECRET=test456" >> .env.test
        echo "JWT_REFRESH_EXPIRATION=7d" >> .env.test
        echo "DB_HOST=localhost" >> .env.test
        echo "DB_PORT=5432" >> .env.test
        echo "DB_USERNAME=postgres" >> .env.test
        echo "DB_PASSWORD=postgres" >> .env.test
        echo "DB_DATABASE=testdb" >> .env.test
        echo "REDIS_HOST=localhost" >> .env.test
        echo "REDIS_PORT=6379" >> .env.test
        echo "REDIS_TTL=60" >> .env.test
        echo "RABBITMQ_URL=amqp://guest:guest@localhost:5672" >> .env.test
        echo "RABBITMQ_QUEUE_NAME=nestjs_queue" >> .env.test
        echo "RABBITMQ_USER_QUEUE=user_queue" >> .env.test
        echo "RABBITMQ_PRODUCT_QUEUE=product_queue" >> .env.test
        echo "RABBITMQ_ORDER_QUEUE=order_queue" >> .env.test
        echo "LOG_LEVEL=info" >> .env.test

    - name: Run E2E Tests
      run: pnpm run test:e2e
      env:
        NODE_ENV: test
        PORT: 3000
        API_GATEWAY_PORT: 3000
        API_PREFIX: api
        API_VERSION: v1
        SWAGGER_PATH: docs
        RATE_LIMIT_TTL: 60
        RATE_LIMIT_MAX: 100
        JWT_SECRET: test123
        JWT_EXPIRATION: 1d
        JWT_REFRESH_SECRET: test456
        JWT_REFRESH_EXPIRATION: 7d
        DB_HOST: localhost
        DB_PORT: 5432
        DB_USERNAME: postgres
        DB_PASSWORD: postgres
        DB_DATABASE: testdb
        REDIS_HOST: localhost
        REDIS_PORT: 6379
        REDIS_TTL: 60
        RABBITMQ_URL: amqp://guest:guest@localhost:5672
        RABBITMQ_QUEUE_NAME: nestjs_queue
        RABBITMQ_USER_QUEUE: user_queue
        RABBITMQ_PRODUCT_QUEUE: product_queue
        RABBITMQ_ORDER_QUEUE: order_queue
        LOG_LEVEL: info
